// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: assignment.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "assignment.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
class peak_pDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<peak_p> {
} _peak_p_default_instance_;
class spectra_pDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<spectra_p> {
} _spectra_p_default_instance_;
class ms_dataDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<ms_data> {
} _ms_data_default_instance_;
class assignmentDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<assignment> {
} _assignment_default_instance_;

namespace protobuf_assignment_2eproto {


namespace {

::google::protobuf::Metadata file_level_metadata[4];

}  // namespace

const ::google::protobuf::uint32 TableStruct::offsets[] = {
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(peak_p, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(peak_p, mz_value_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(peak_p, intensity_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(spectra_p, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(spectra_p, file_name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(spectra_p, spectra_name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(spectra_p, ions_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ms_data, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ms_data, idxes_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ms_data, data_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(assignment, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(assignment, num_proc_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(assignment, multi_dataset_),
};

static const ::google::protobuf::internal::MigrationSchema schemas[] = {
  { 0, -1, sizeof(peak_p)},
  { 6, -1, sizeof(spectra_p)},
  { 13, -1, sizeof(ms_data)},
  { 19, -1, sizeof(assignment)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&_peak_p_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_spectra_p_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_ms_data_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_assignment_default_instance_),
};

namespace {

void protobuf_AssignDescriptors() {
  AddDescriptors();
  ::google::protobuf::MessageFactory* factory = NULL;
  AssignDescriptors(
      "assignment.proto", schemas, file_default_instances, TableStruct::offsets, factory,
      file_level_metadata, NULL, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 4);
}

}  // namespace

void TableStruct::Shutdown() {
  _peak_p_default_instance_.Shutdown();
  delete file_level_metadata[0].reflection;
  _spectra_p_default_instance_.Shutdown();
  delete file_level_metadata[1].reflection;
  _ms_data_default_instance_.Shutdown();
  delete file_level_metadata[2].reflection;
  _assignment_default_instance_.Shutdown();
  delete file_level_metadata[3].reflection;
}

void TableStruct::InitDefaultsImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::internal::InitProtobufDefaults();
  _peak_p_default_instance_.DefaultConstruct();
  _spectra_p_default_instance_.DefaultConstruct();
  _ms_data_default_instance_.DefaultConstruct();
  _assignment_default_instance_.DefaultConstruct();
}

void InitDefaults() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &TableStruct::InitDefaultsImpl);
}
void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] = {
      "\n\020assignment.proto\"-\n\006peak_p\022\020\n\010mz_value"
      "\030\001 \001(\001\022\021\n\tintensity\030\002 \001(\001\"K\n\tspectra_p\022\021"
      "\n\tfile_name\030\001 \001(\t\022\024\n\014spectra_name\030\002 \001(\t\022"
      "\025\n\004ions\030\003 \003(\0132\007.peak_p\"2\n\007ms_data\022\r\n\005idx"
      "es\030\001 \003(\005\022\030\n\004data\030\002 \003(\0132\n.spectra_p\"\?\n\nas"
      "signment\022\020\n\010num_proc\030\001 \001(\005\022\037\n\rmulti_data"
      "set\030\002 \003(\0132\010.ms_datab\006proto3"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 267);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "assignment.proto", &protobuf_RegisterTypes);
  ::google::protobuf::internal::OnShutdown(&TableStruct::Shutdown);
}

void AddDescriptors() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;

}  // namespace protobuf_assignment_2eproto


// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int peak_p::kMzValueFieldNumber;
const int peak_p::kIntensityFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

peak_p::peak_p()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_assignment_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:peak_p)
}
peak_p::peak_p(const peak_p& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&mz_value_, &from.mz_value_,
    reinterpret_cast<char*>(&intensity_) -
    reinterpret_cast<char*>(&mz_value_) + sizeof(intensity_));
  // @@protoc_insertion_point(copy_constructor:peak_p)
}

void peak_p::SharedCtor() {
  ::memset(&mz_value_, 0, reinterpret_cast<char*>(&intensity_) -
    reinterpret_cast<char*>(&mz_value_) + sizeof(intensity_));
  _cached_size_ = 0;
}

peak_p::~peak_p() {
  // @@protoc_insertion_point(destructor:peak_p)
  SharedDtor();
}

void peak_p::SharedDtor() {
}

void peak_p::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* peak_p::descriptor() {
  protobuf_assignment_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_assignment_2eproto::file_level_metadata[0].descriptor;
}

const peak_p& peak_p::default_instance() {
  protobuf_assignment_2eproto::InitDefaults();
  return *internal_default_instance();
}

peak_p* peak_p::New(::google::protobuf::Arena* arena) const {
  peak_p* n = new peak_p;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void peak_p::Clear() {
// @@protoc_insertion_point(message_clear_start:peak_p)
  ::memset(&mz_value_, 0, reinterpret_cast<char*>(&intensity_) -
    reinterpret_cast<char*>(&mz_value_) + sizeof(intensity_));
}

bool peak_p::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:peak_p)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // double mz_value = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(9u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &mz_value_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // double intensity = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(17u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &intensity_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:peak_p)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:peak_p)
  return false;
#undef DO_
}

void peak_p::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:peak_p)
  // double mz_value = 1;
  if (this->mz_value() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(1, this->mz_value(), output);
  }

  // double intensity = 2;
  if (this->intensity() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(2, this->intensity(), output);
  }

  // @@protoc_insertion_point(serialize_end:peak_p)
}

::google::protobuf::uint8* peak_p::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:peak_p)
  // double mz_value = 1;
  if (this->mz_value() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(1, this->mz_value(), target);
  }

  // double intensity = 2;
  if (this->intensity() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(2, this->intensity(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:peak_p)
  return target;
}

size_t peak_p::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:peak_p)
  size_t total_size = 0;

  // double mz_value = 1;
  if (this->mz_value() != 0) {
    total_size += 1 + 8;
  }

  // double intensity = 2;
  if (this->intensity() != 0) {
    total_size += 1 + 8;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void peak_p::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:peak_p)
  GOOGLE_DCHECK_NE(&from, this);
  const peak_p* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const peak_p>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:peak_p)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:peak_p)
    MergeFrom(*source);
  }
}

void peak_p::MergeFrom(const peak_p& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:peak_p)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.mz_value() != 0) {
    set_mz_value(from.mz_value());
  }
  if (from.intensity() != 0) {
    set_intensity(from.intensity());
  }
}

void peak_p::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:peak_p)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void peak_p::CopyFrom(const peak_p& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:peak_p)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool peak_p::IsInitialized() const {
  return true;
}

void peak_p::Swap(peak_p* other) {
  if (other == this) return;
  InternalSwap(other);
}
void peak_p::InternalSwap(peak_p* other) {
  std::swap(mz_value_, other->mz_value_);
  std::swap(intensity_, other->intensity_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata peak_p::GetMetadata() const {
  protobuf_assignment_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_assignment_2eproto::file_level_metadata[0];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// peak_p

// double mz_value = 1;
void peak_p::clear_mz_value() {
  mz_value_ = 0;
}
double peak_p::mz_value() const {
  // @@protoc_insertion_point(field_get:peak_p.mz_value)
  return mz_value_;
}
void peak_p::set_mz_value(double value) {
  
  mz_value_ = value;
  // @@protoc_insertion_point(field_set:peak_p.mz_value)
}

// double intensity = 2;
void peak_p::clear_intensity() {
  intensity_ = 0;
}
double peak_p::intensity() const {
  // @@protoc_insertion_point(field_get:peak_p.intensity)
  return intensity_;
}
void peak_p::set_intensity(double value) {
  
  intensity_ = value;
  // @@protoc_insertion_point(field_set:peak_p.intensity)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int spectra_p::kFileNameFieldNumber;
const int spectra_p::kSpectraNameFieldNumber;
const int spectra_p::kIonsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

spectra_p::spectra_p()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_assignment_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:spectra_p)
}
spectra_p::spectra_p(const spectra_p& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      ions_(from.ions_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  file_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.file_name().size() > 0) {
    file_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.file_name_);
  }
  spectra_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.spectra_name().size() > 0) {
    spectra_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.spectra_name_);
  }
  // @@protoc_insertion_point(copy_constructor:spectra_p)
}

void spectra_p::SharedCtor() {
  file_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  spectra_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

spectra_p::~spectra_p() {
  // @@protoc_insertion_point(destructor:spectra_p)
  SharedDtor();
}

void spectra_p::SharedDtor() {
  file_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  spectra_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void spectra_p::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* spectra_p::descriptor() {
  protobuf_assignment_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_assignment_2eproto::file_level_metadata[1].descriptor;
}

const spectra_p& spectra_p::default_instance() {
  protobuf_assignment_2eproto::InitDefaults();
  return *internal_default_instance();
}

spectra_p* spectra_p::New(::google::protobuf::Arena* arena) const {
  spectra_p* n = new spectra_p;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void spectra_p::Clear() {
// @@protoc_insertion_point(message_clear_start:spectra_p)
  ions_.Clear();
  file_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  spectra_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

bool spectra_p::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:spectra_p)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string file_name = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_file_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->file_name().data(), this->file_name().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "spectra_p.file_name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string spectra_name = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_spectra_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->spectra_name().data(), this->spectra_name().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "spectra_p.spectra_name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .peak_p ions = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u)) {
          DO_(input->IncrementRecursionDepth());
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_ions()));
        } else {
          goto handle_unusual;
        }
        input->UnsafeDecrementRecursionDepth();
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:spectra_p)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:spectra_p)
  return false;
#undef DO_
}

void spectra_p::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:spectra_p)
  // string file_name = 1;
  if (this->file_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->file_name().data(), this->file_name().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "spectra_p.file_name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->file_name(), output);
  }

  // string spectra_name = 2;
  if (this->spectra_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->spectra_name().data(), this->spectra_name().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "spectra_p.spectra_name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->spectra_name(), output);
  }

  // repeated .peak_p ions = 3;
  for (unsigned int i = 0, n = this->ions_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->ions(i), output);
  }

  // @@protoc_insertion_point(serialize_end:spectra_p)
}

::google::protobuf::uint8* spectra_p::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:spectra_p)
  // string file_name = 1;
  if (this->file_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->file_name().data(), this->file_name().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "spectra_p.file_name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->file_name(), target);
  }

  // string spectra_name = 2;
  if (this->spectra_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->spectra_name().data(), this->spectra_name().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "spectra_p.spectra_name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->spectra_name(), target);
  }

  // repeated .peak_p ions = 3;
  for (unsigned int i = 0, n = this->ions_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        3, this->ions(i), false, target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:spectra_p)
  return target;
}

size_t spectra_p::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:spectra_p)
  size_t total_size = 0;

  // repeated .peak_p ions = 3;
  {
    unsigned int count = this->ions_size();
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->ions(i));
    }
  }

  // string file_name = 1;
  if (this->file_name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->file_name());
  }

  // string spectra_name = 2;
  if (this->spectra_name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->spectra_name());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void spectra_p::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:spectra_p)
  GOOGLE_DCHECK_NE(&from, this);
  const spectra_p* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const spectra_p>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:spectra_p)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:spectra_p)
    MergeFrom(*source);
  }
}

void spectra_p::MergeFrom(const spectra_p& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:spectra_p)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ions_.MergeFrom(from.ions_);
  if (from.file_name().size() > 0) {

    file_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.file_name_);
  }
  if (from.spectra_name().size() > 0) {

    spectra_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.spectra_name_);
  }
}

void spectra_p::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:spectra_p)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void spectra_p::CopyFrom(const spectra_p& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:spectra_p)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool spectra_p::IsInitialized() const {
  return true;
}

void spectra_p::Swap(spectra_p* other) {
  if (other == this) return;
  InternalSwap(other);
}
void spectra_p::InternalSwap(spectra_p* other) {
  ions_.UnsafeArenaSwap(&other->ions_);
  file_name_.Swap(&other->file_name_);
  spectra_name_.Swap(&other->spectra_name_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata spectra_p::GetMetadata() const {
  protobuf_assignment_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_assignment_2eproto::file_level_metadata[1];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// spectra_p

// string file_name = 1;
void spectra_p::clear_file_name() {
  file_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& spectra_p::file_name() const {
  // @@protoc_insertion_point(field_get:spectra_p.file_name)
  return file_name_.GetNoArena();
}
void spectra_p::set_file_name(const ::std::string& value) {
  
  file_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:spectra_p.file_name)
}
#if LANG_CXX11
void spectra_p::set_file_name(::std::string&& value) {
  
  file_name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:spectra_p.file_name)
}
#endif
void spectra_p::set_file_name(const char* value) {
  
  file_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:spectra_p.file_name)
}
void spectra_p::set_file_name(const char* value, size_t size) {
  
  file_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:spectra_p.file_name)
}
::std::string* spectra_p::mutable_file_name() {
  
  // @@protoc_insertion_point(field_mutable:spectra_p.file_name)
  return file_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* spectra_p::release_file_name() {
  // @@protoc_insertion_point(field_release:spectra_p.file_name)
  
  return file_name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void spectra_p::set_allocated_file_name(::std::string* file_name) {
  if (file_name != NULL) {
    
  } else {
    
  }
  file_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), file_name);
  // @@protoc_insertion_point(field_set_allocated:spectra_p.file_name)
}

// string spectra_name = 2;
void spectra_p::clear_spectra_name() {
  spectra_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& spectra_p::spectra_name() const {
  // @@protoc_insertion_point(field_get:spectra_p.spectra_name)
  return spectra_name_.GetNoArena();
}
void spectra_p::set_spectra_name(const ::std::string& value) {
  
  spectra_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:spectra_p.spectra_name)
}
#if LANG_CXX11
void spectra_p::set_spectra_name(::std::string&& value) {
  
  spectra_name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:spectra_p.spectra_name)
}
#endif
void spectra_p::set_spectra_name(const char* value) {
  
  spectra_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:spectra_p.spectra_name)
}
void spectra_p::set_spectra_name(const char* value, size_t size) {
  
  spectra_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:spectra_p.spectra_name)
}
::std::string* spectra_p::mutable_spectra_name() {
  
  // @@protoc_insertion_point(field_mutable:spectra_p.spectra_name)
  return spectra_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* spectra_p::release_spectra_name() {
  // @@protoc_insertion_point(field_release:spectra_p.spectra_name)
  
  return spectra_name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void spectra_p::set_allocated_spectra_name(::std::string* spectra_name) {
  if (spectra_name != NULL) {
    
  } else {
    
  }
  spectra_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), spectra_name);
  // @@protoc_insertion_point(field_set_allocated:spectra_p.spectra_name)
}

// repeated .peak_p ions = 3;
int spectra_p::ions_size() const {
  return ions_.size();
}
void spectra_p::clear_ions() {
  ions_.Clear();
}
const ::peak_p& spectra_p::ions(int index) const {
  // @@protoc_insertion_point(field_get:spectra_p.ions)
  return ions_.Get(index);
}
::peak_p* spectra_p::mutable_ions(int index) {
  // @@protoc_insertion_point(field_mutable:spectra_p.ions)
  return ions_.Mutable(index);
}
::peak_p* spectra_p::add_ions() {
  // @@protoc_insertion_point(field_add:spectra_p.ions)
  return ions_.Add();
}
::google::protobuf::RepeatedPtrField< ::peak_p >*
spectra_p::mutable_ions() {
  // @@protoc_insertion_point(field_mutable_list:spectra_p.ions)
  return &ions_;
}
const ::google::protobuf::RepeatedPtrField< ::peak_p >&
spectra_p::ions() const {
  // @@protoc_insertion_point(field_list:spectra_p.ions)
  return ions_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ms_data::kIdxesFieldNumber;
const int ms_data::kDataFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ms_data::ms_data()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_assignment_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:ms_data)
}
ms_data::ms_data(const ms_data& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      idxes_(from.idxes_),
      data_(from.data_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:ms_data)
}

void ms_data::SharedCtor() {
  _cached_size_ = 0;
}

ms_data::~ms_data() {
  // @@protoc_insertion_point(destructor:ms_data)
  SharedDtor();
}

void ms_data::SharedDtor() {
}

void ms_data::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ms_data::descriptor() {
  protobuf_assignment_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_assignment_2eproto::file_level_metadata[2].descriptor;
}

const ms_data& ms_data::default_instance() {
  protobuf_assignment_2eproto::InitDefaults();
  return *internal_default_instance();
}

ms_data* ms_data::New(::google::protobuf::Arena* arena) const {
  ms_data* n = new ms_data;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ms_data::Clear() {
// @@protoc_insertion_point(message_clear_start:ms_data)
  idxes_.Clear();
  data_.Clear();
}

bool ms_data::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ms_data)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated int32 idxes = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, this->mutable_idxes())));
        } else if (static_cast< ::google::protobuf::uint8>(tag) ==
                   static_cast< ::google::protobuf::uint8>(8u)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 1, 10u, input, this->mutable_idxes())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .spectra_p data = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u)) {
          DO_(input->IncrementRecursionDepth());
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_data()));
        } else {
          goto handle_unusual;
        }
        input->UnsafeDecrementRecursionDepth();
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ms_data)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ms_data)
  return false;
#undef DO_
}

void ms_data::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ms_data)
  // repeated int32 idxes = 1;
  if (this->idxes_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(1, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(_idxes_cached_byte_size_);
  }
  for (int i = 0, n = this->idxes_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32NoTag(
      this->idxes(i), output);
  }

  // repeated .spectra_p data = 2;
  for (unsigned int i = 0, n = this->data_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->data(i), output);
  }

  // @@protoc_insertion_point(serialize_end:ms_data)
}

::google::protobuf::uint8* ms_data::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:ms_data)
  // repeated int32 idxes = 1;
  if (this->idxes_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      1,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
      _idxes_cached_byte_size_, target);
  }
  for (int i = 0, n = this->idxes_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt32NoTagToArray(this->idxes(i), target);
  }

  // repeated .spectra_p data = 2;
  for (unsigned int i = 0, n = this->data_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        2, this->data(i), false, target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:ms_data)
  return target;
}

size_t ms_data::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ms_data)
  size_t total_size = 0;

  // repeated int32 idxes = 1;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      Int32Size(this->idxes_);
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(data_size);
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _idxes_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // repeated .spectra_p data = 2;
  {
    unsigned int count = this->data_size();
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->data(i));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ms_data::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ms_data)
  GOOGLE_DCHECK_NE(&from, this);
  const ms_data* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ms_data>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ms_data)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ms_data)
    MergeFrom(*source);
  }
}

void ms_data::MergeFrom(const ms_data& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ms_data)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  idxes_.MergeFrom(from.idxes_);
  data_.MergeFrom(from.data_);
}

void ms_data::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ms_data)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ms_data::CopyFrom(const ms_data& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ms_data)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ms_data::IsInitialized() const {
  return true;
}

void ms_data::Swap(ms_data* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ms_data::InternalSwap(ms_data* other) {
  idxes_.UnsafeArenaSwap(&other->idxes_);
  data_.UnsafeArenaSwap(&other->data_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ms_data::GetMetadata() const {
  protobuf_assignment_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_assignment_2eproto::file_level_metadata[2];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ms_data

// repeated int32 idxes = 1;
int ms_data::idxes_size() const {
  return idxes_.size();
}
void ms_data::clear_idxes() {
  idxes_.Clear();
}
::google::protobuf::int32 ms_data::idxes(int index) const {
  // @@protoc_insertion_point(field_get:ms_data.idxes)
  return idxes_.Get(index);
}
void ms_data::set_idxes(int index, ::google::protobuf::int32 value) {
  idxes_.Set(index, value);
  // @@protoc_insertion_point(field_set:ms_data.idxes)
}
void ms_data::add_idxes(::google::protobuf::int32 value) {
  idxes_.Add(value);
  // @@protoc_insertion_point(field_add:ms_data.idxes)
}
const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
ms_data::idxes() const {
  // @@protoc_insertion_point(field_list:ms_data.idxes)
  return idxes_;
}
::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
ms_data::mutable_idxes() {
  // @@protoc_insertion_point(field_mutable_list:ms_data.idxes)
  return &idxes_;
}

// repeated .spectra_p data = 2;
int ms_data::data_size() const {
  return data_.size();
}
void ms_data::clear_data() {
  data_.Clear();
}
const ::spectra_p& ms_data::data(int index) const {
  // @@protoc_insertion_point(field_get:ms_data.data)
  return data_.Get(index);
}
::spectra_p* ms_data::mutable_data(int index) {
  // @@protoc_insertion_point(field_mutable:ms_data.data)
  return data_.Mutable(index);
}
::spectra_p* ms_data::add_data() {
  // @@protoc_insertion_point(field_add:ms_data.data)
  return data_.Add();
}
::google::protobuf::RepeatedPtrField< ::spectra_p >*
ms_data::mutable_data() {
  // @@protoc_insertion_point(field_mutable_list:ms_data.data)
  return &data_;
}
const ::google::protobuf::RepeatedPtrField< ::spectra_p >&
ms_data::data() const {
  // @@protoc_insertion_point(field_list:ms_data.data)
  return data_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int assignment::kNumProcFieldNumber;
const int assignment::kMultiDatasetFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

assignment::assignment()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_assignment_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:assignment)
}
assignment::assignment(const assignment& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      multi_dataset_(from.multi_dataset_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  num_proc_ = from.num_proc_;
  // @@protoc_insertion_point(copy_constructor:assignment)
}

void assignment::SharedCtor() {
  num_proc_ = 0;
  _cached_size_ = 0;
}

assignment::~assignment() {
  // @@protoc_insertion_point(destructor:assignment)
  SharedDtor();
}

void assignment::SharedDtor() {
}

void assignment::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* assignment::descriptor() {
  protobuf_assignment_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_assignment_2eproto::file_level_metadata[3].descriptor;
}

const assignment& assignment::default_instance() {
  protobuf_assignment_2eproto::InitDefaults();
  return *internal_default_instance();
}

assignment* assignment::New(::google::protobuf::Arena* arena) const {
  assignment* n = new assignment;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void assignment::Clear() {
// @@protoc_insertion_point(message_clear_start:assignment)
  multi_dataset_.Clear();
  num_proc_ = 0;
}

bool assignment::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:assignment)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 num_proc = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &num_proc_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .ms_data multi_dataset = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u)) {
          DO_(input->IncrementRecursionDepth());
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_multi_dataset()));
        } else {
          goto handle_unusual;
        }
        input->UnsafeDecrementRecursionDepth();
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:assignment)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:assignment)
  return false;
#undef DO_
}

void assignment::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:assignment)
  // int32 num_proc = 1;
  if (this->num_proc() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->num_proc(), output);
  }

  // repeated .ms_data multi_dataset = 2;
  for (unsigned int i = 0, n = this->multi_dataset_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->multi_dataset(i), output);
  }

  // @@protoc_insertion_point(serialize_end:assignment)
}

::google::protobuf::uint8* assignment::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:assignment)
  // int32 num_proc = 1;
  if (this->num_proc() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->num_proc(), target);
  }

  // repeated .ms_data multi_dataset = 2;
  for (unsigned int i = 0, n = this->multi_dataset_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        2, this->multi_dataset(i), false, target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:assignment)
  return target;
}

size_t assignment::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:assignment)
  size_t total_size = 0;

  // repeated .ms_data multi_dataset = 2;
  {
    unsigned int count = this->multi_dataset_size();
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->multi_dataset(i));
    }
  }

  // int32 num_proc = 1;
  if (this->num_proc() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->num_proc());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void assignment::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:assignment)
  GOOGLE_DCHECK_NE(&from, this);
  const assignment* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const assignment>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:assignment)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:assignment)
    MergeFrom(*source);
  }
}

void assignment::MergeFrom(const assignment& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:assignment)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  multi_dataset_.MergeFrom(from.multi_dataset_);
  if (from.num_proc() != 0) {
    set_num_proc(from.num_proc());
  }
}

void assignment::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:assignment)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void assignment::CopyFrom(const assignment& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:assignment)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool assignment::IsInitialized() const {
  return true;
}

void assignment::Swap(assignment* other) {
  if (other == this) return;
  InternalSwap(other);
}
void assignment::InternalSwap(assignment* other) {
  multi_dataset_.UnsafeArenaSwap(&other->multi_dataset_);
  std::swap(num_proc_, other->num_proc_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata assignment::GetMetadata() const {
  protobuf_assignment_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_assignment_2eproto::file_level_metadata[3];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// assignment

// int32 num_proc = 1;
void assignment::clear_num_proc() {
  num_proc_ = 0;
}
::google::protobuf::int32 assignment::num_proc() const {
  // @@protoc_insertion_point(field_get:assignment.num_proc)
  return num_proc_;
}
void assignment::set_num_proc(::google::protobuf::int32 value) {
  
  num_proc_ = value;
  // @@protoc_insertion_point(field_set:assignment.num_proc)
}

// repeated .ms_data multi_dataset = 2;
int assignment::multi_dataset_size() const {
  return multi_dataset_.size();
}
void assignment::clear_multi_dataset() {
  multi_dataset_.Clear();
}
const ::ms_data& assignment::multi_dataset(int index) const {
  // @@protoc_insertion_point(field_get:assignment.multi_dataset)
  return multi_dataset_.Get(index);
}
::ms_data* assignment::mutable_multi_dataset(int index) {
  // @@protoc_insertion_point(field_mutable:assignment.multi_dataset)
  return multi_dataset_.Mutable(index);
}
::ms_data* assignment::add_multi_dataset() {
  // @@protoc_insertion_point(field_add:assignment.multi_dataset)
  return multi_dataset_.Add();
}
::google::protobuf::RepeatedPtrField< ::ms_data >*
assignment::mutable_multi_dataset() {
  // @@protoc_insertion_point(field_mutable_list:assignment.multi_dataset)
  return &multi_dataset_;
}
const ::google::protobuf::RepeatedPtrField< ::ms_data >&
assignment::multi_dataset() const {
  // @@protoc_insertion_point(field_list:assignment.multi_dataset)
  return multi_dataset_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

// @@protoc_insertion_point(global_scope)
